# Nest.js 공부하기

## Nest.js?
> Node.js에서 사용되는 프레임워크로, `Angular`의 디자인 철학을 차용하여 구조화된 서버 사이드 애플리케이션 구축에 도움을 준다.
> Nest.js의 핵심 개념 중에는 컨트롤러, 서비스, 모듈이 있다.

### Module 모듈

Nest.js App의 기본 구성 요소이다. 모듈은 관련된 구성 요소 (컨트롤러, 서비스, 기타 제공자)를 그룹화하여 하나의 단위로 관리할 수 있게 한다.
모든 Nest.js App은 최소 하나의 루트 모듈을 가지며, 이 모듈이 App의 진입점이 된다.

#### 역할

    - 관련된 구성 요소들을 그룹화
    - 의존성 주입을 통해 다른 모듈이나 서비스와 상호작용을 관리
    - 모듈 간의 결합도를 낮추고 유지보수성을 높임.

### Controller 컨트롤러

컨트롤러는 HTTP 요청을 처리하고 클라이언트에게 응답을 반환하는 역할.
컨트롤러는 주로 경로를 정의하고, 각 경로에 대한 핸들러 메소드를 제공한다.
이 핸들러 메소드는 주로 서비스 레이어를 호출하여 필요한 작업을 수행한다.

#### 역할

    - HTTP 요청을 처리
    - 클라이언트로부터 요청을 받아서 적절한 서비스 메소드를 호출
    - 응답 데이터를 포맷팅하여 클라이언트에게 반환

### Service 서비스

주로 비즈니스 로직을 처리하는 역할
데이터베이스와의 상호작용, 외부 API 호출, 데이터 처리 등의 작업을 수행한다.
`@Injectable()` 데코레이터를 사용하여 정의되며, 컨트롤러 혹은 다른 서비스에서 주입되어 사용.

#### 역할

    - 비즈니스 로직을 캡슐화하여 재사용성을 높임
    - DB와 상호작용 처리
    - 외부 API 호출 및 데이터 처리

## 관계
### 모듈(Module)

- 애플리케이션의 기본 구성 요소로 컨트롤러와 서비스를 포함하여 그룹화합니다.
- 모듈은 관련된 컨트롤러와 서비스를 하나의 단위로 결합하여 의존성 주입을 관리합니다.

### 컨트롤러(Controller)

- 클라이언트로부터 HTTP 요청을 받아서 처리합니다.
- 필요한 경우 서비스의 메소드를 호출하여 비즈니스 로직을 수행합니다.

### 서비스(Service)

- 비즈니스 로직을 처리하고 데이터를 관리합니다.
- 컨트롤러에 의해 호출되며, 필요한 데이터를 제공하거나 조작합니다.
